# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '2dwindow.ui'
#
# Created by: PyQt5 UI code generator 5.13.2
#
# WARNING! All changes made in this file will be lost!


from PySide2 import QtCore, QtGui, QtWidgets
from sampleDatas import resource_path

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.resize(1250, 900)
        MainWindow.setMouseTracking(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(resource_path("./ico/SDico.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setMouseTracking(True)
        self.graphicsView.setObjectName("graphicsView")
        self.gridLayout.addWidget(self.graphicsView, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 981, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuCamera = QtWidgets.QMenu(self.menuView)
        self.menuCamera.setObjectName("menuCamera")
        self.menuElevation = QtWidgets.QMenu(self.menuCamera)
        self.menuElevation.setObjectName("menuElevation")
        self.menuPreference = QtWidgets.QMenu(self.menubar)
        self.menuPreference.setObjectName("menuPreference")
        self.menuRun_Script = QtWidgets.QMenu(self.menubar)
        self.menuRun_Script.setObjectName("menuRun_Script")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.statusbar.setFont(font)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setEnabled(True)

        self.toolBar.setAutoFillBackground(True)
        self.toolBar.setIconSize(QtCore.QSize(40, 30))
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.toolBar.setFloatable(True)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionPrint = QtWidgets.QAction(MainWindow)
        self.actionPrint.setObjectName("actionPrint")
        self.actionShare = QtWidgets.QAction(MainWindow)
        self.actionShare.setObjectName("actionShare")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        self.actionRedo.setObjectName("actionRedo")
        self.actionCut = QtWidgets.QAction(MainWindow)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.actionObjects = QtWidgets.QAction(MainWindow)
        self.actionObjects.setObjectName("actionObjects")
        self.actionToolbar = QtWidgets.QAction(MainWindow)
        self.actionToolbar.setCheckable(True)
        self.actionToolbar.setChecked(True)
        self.actionToolbar.setObjectName("actionToolbar")

        self.actionPropertiesBar = QtWidgets.QAction(MainWindow)
        self.actionPropertiesBar.setCheckable(True)
        self.actionPropertiesBar.setChecked(True)
        self.actionPropertiesBar.setObjectName("actionPropertiesBar")

        self.actionObject_Tree = QtWidgets.QAction(MainWindow)
        self.actionObject_Tree.setObjectName("actionObject_Tree")
        self.actionObject_Tree.setCheckable(True)
        self.actionObject_Tree.setChecked(True)
        self.actionOthrograpic = QtWidgets.QAction(MainWindow)
        self.actionOthrograpic.setObjectName("actionOthrograpic")
        self.actionGrid = QtWidgets.QAction(MainWindow)
        self.actionGrid.setCheckable(True)
        self.actionGrid.setChecked(True)
        self.actionGrid.setObjectName("actionGrid")
        self.actionAxis = QtWidgets.QAction(MainWindow)
        self.actionAxis.setCheckable(True)
        self.actionAxis.setChecked(True)
        self.actionAxis.setObjectName("actionAxis")
        self.actionDark_Mode = QtWidgets.QAction(MainWindow)
        self.actionDark_Mode.setCheckable(True)
        self.actionDark_Mode.setObjectName("actionDark_Mode")
        self.actionPlan = QtWidgets.QAction(MainWindow)
        self.actionPlan.setObjectName("actionPlan")
        self.actionFront = QtWidgets.QAction(MainWindow)
        self.actionFront.setObjectName("actionFront")
        self.actionLeft = QtWidgets.QAction(MainWindow)
        self.actionLeft.setObjectName("actionLeft")
        self.actionRight = QtWidgets.QAction(MainWindow)
        self.actionRight.setObjectName("actionRight")
        self.actionBack = QtWidgets.QAction(MainWindow)
        self.actionBack.setObjectName("actionBack")
        self.actionColor_profile = QtWidgets.QAction(MainWindow)
        self.actionColor_profile.setObjectName("actionColor_profile")
        self.actionTweaks = QtWidgets.QAction(MainWindow)
        self.actionTweaks.setObjectName("actionTweaks")
        self.actionSI_Units = QtWidgets.QAction(MainWindow)
        self.actionSI_Units.setObjectName("actionSI_Units")
        self.actionEngineering_Units = QtWidgets.QAction(MainWindow)
        self.actionEngineering_Units.setObjectName("actionEngineering_Units")
        self.actionClear_Screen = QtWidgets.QAction(MainWindow)
        self.actionClear_Screen.setObjectName("actionClear_Screen")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionManual = QtWidgets.QAction(MainWindow)
        self.actionManual.setObjectName("actionManual")
        self.actionUpdate = QtWidgets.QAction(MainWindow)
        self.actionUpdate.setObjectName("actionUpdate")
        self.actionLicense = QtWidgets.QAction(MainWindow)
        self.actionLicense.setObjectName("actionLicense")
        
        
        
        
        #Tools
        self.toolsGroup = QtWidgets.QActionGroup(MainWindow)
        self.actionLine = QtWidgets.QAction(MainWindow)
        self.actionLine.setCheckable(True)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolline.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLine.setIcon(icon1)
        self.actionLine.setObjectName("actionLine")

        self.actionArc = QtWidgets.QAction(MainWindow)
        self.actionArc.setCheckable(True)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolarc.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionArc.setIcon(icon2)
        self.actionArc.setObjectName("actionArc")

        self.actionQuad = QtWidgets.QAction(MainWindow)
        self.actionQuad.setCheckable(True)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolquad.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionQuad.setIcon(icon3)
        self.actionQuad.setObjectName("actionQuad")

        # self.toolsGroup.setExclusionPolicy(QtWidgets.QActionGroup.ExclusionPolicy.ExclusiveOptional)
        self.toolsGroup.addAction(self.actionLine)
        self.toolsGroup.addAction(self.actionArc)
        self.toolsGroup.addAction(self.actionQuad)

        self.actionRoller = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionRoller)
        self.actionRoller.setCheckable(True)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolroller.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRoller.setIcon(icon4)
        self.actionRoller.setObjectName("actionRoller")
        self.actionHinge = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionHinge)
        self.actionHinge.setCheckable(True)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolhinge.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHinge.setIcon(icon5)
        self.actionHinge.setObjectName("actionHinge")
        self.actionFixed = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionFixed)
        self.actionFixed.setCheckable(True)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolfixed.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFixed.setIcon(icon6)
        self.actionFixed.setObjectName("actionFixed")
        
        self.actionInternalHinge = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionInternalHinge)
        self.actionInternalHinge.setCheckable(True)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolInternalHinge.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInternalHinge.setIcon(icon7)
        self.actionInternalHinge.setObjectName("actionInternalHinge")

        self.actionCustomSupport = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionCustomSupport)
        self.actionCustomSupport.setCheckable(True)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolcustomsupport.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCustomSupport.setIcon(icon7)
        self.actionCustomSupport.setObjectName("actionInternalHinge")

        self.actionMoment = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionMoment)
        self.actionMoment.setCheckable(True)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolmoment.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMoment.setIcon(icon14)
        self.actionMoment.setObjectName("actionMoment")

        self.actionPointLoad = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionPointLoad)
        self.actionPointLoad.setCheckable(True)
        self.actionPointLoad = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionPointLoad)
        self.actionPointLoad.setCheckable(True)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolpoint.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPointLoad.setIcon(icon8)
        self.actionPointLoad.setObjectName("actionPointLoad")
        self.actionUDL = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionUDL)
        self.actionUDL.setCheckable(True)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolUDL.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUDL.setIcon(icon9)
        self.actionUDL.setObjectName("actionUDL")
        self.actionUVL = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionUVL)
        self.actionUVL.setCheckable(True)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolUVL.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUVL.setIcon(icon10)
        self.actionUVL.setObjectName("actionUVL")
        
        self.actionPolyLoad = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionPolyLoad)
        self.actionPolyLoad.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolpolyload.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPolyLoad.setIcon(icon11)
        self.actionPolyLoad.setObjectName("actionPolyLoad")

        self.actionMisfitLoad = QtWidgets.QAction(MainWindow)
        # self.toolsGroup.addAction(self.actionMisfitLoad)
        # self.actionMisfitLoad.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolMisfitLoad.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMisfitLoad.setIcon(icon11)
        self.actionMisfitLoad.setObjectName("actionMisfitLoad")

        self.actionTemprLoad = QtWidgets.QAction(MainWindow)
        # self.toolsGroup.addAction(self.actionTemprLoad)
        # self.actionTemprLoad.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolTemprLoad.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionTemprLoad.setIcon(icon11)
        self.actionTemprLoad.setObjectName("actionTemprLoad")

        self.actionGravityLoad = QtWidgets.QAction(MainWindow)
        # self.toolsGroup.addAction(self.actionGravityLoad)
        # self.actionGravityLoad.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolGravityLoad.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGravityLoad.setIcon(icon11)
        self.actionGravityLoad.setObjectName("actionGravityLoad")

        self.actionMeasure = QtWidgets.QAction(MainWindow)
        self.toolsGroup.addAction(self.actionMeasure)
        self.actionMeasure.setCheckable(True)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolMeasure.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMeasure.setIcon(icon15)
        self.actionMeasure.setObjectName("actionMeasure")        

        self.actionzoomIn = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolzoomin.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionzoomIn.setIcon(icon12)
        self.actionzoomIn.setObjectName("actionzoomIn")
        self.actionzoomOut = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolzoomout.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionzoomOut.setIcon(icon13)
        self.actionzoomOut.setObjectName("actionzoomOut")

        # self.actionLine_2 = QtWidgets.QAction(MainWindow)
        # self.actionLine_2.setObjectName("actionLine_2")
        # self.actionArc_2 = QtWidgets.QAction(MainWindow)
        # self.actionArc_2.setObjectName("actionArc_2")
        # self.actionQuad_2 = QtWidgets.QAction(MainWindow)
        # self.actionQuad_2.setObjectName("actionQuad_2")
        # self.actionPoint_load = QtWidgets.QAction(MainWindow)
        # self.actionPoint_load.setObjectName("actionPoint_load")
        # self.actionUDL_2 = QtWidgets.QAction(MainWindow)
        # self.actionUDL_2.setObjectName("actionUDL_2")
        # self.actionUVL_2 = QtWidgets.QAction(MainWindow)
        # self.actionUVL_2.setObjectName("actionUVL_2")
        # self.actionRoller_2 = QtWidgets.QAction(MainWindow)
        # self.actionRoller_2.setObjectName("actionRoller_2")
        # self.actionHinge_2 = QtWidgets.QAction(MainWindow)
        # self.actionHinge_2.setObjectName("actionHinge_2")
        # self.actionFixed_2 = QtWidgets.QAction(MainWindow)
        # self.actionFixed_2.setObjectName("actionFixed_2")
        # self.actionInternal_Hinge = QtWidgets.QAction(MainWindow)
        # self.actionInternal_Hinge.setObjectName("actionInternal_Hinge")
      


        self.actionScript = QtWidgets.QAction(MainWindow)
        self.actionScript.setObjectName("actionScript")

        self.actionMOI_calculator = QtWidgets.QAction(MainWindow)
        self.actionMOI_calculator.setObjectName("actionMOI_calculator")
        self.actionCalculator=QtWidgets.QAction(MainWindow)
        self.actionCalculator.setObjectName("actionCalculator")
        self.actionCalculator.setCheckable(True)

        self.actionGenerateReport=QtWidgets.QAction(MainWindow)
        self.actionGenerateReport.setObjectName("actionGenerateReport")

        self.actionConsole = QtWidgets.QAction(MainWindow)
        self.actionConsole.setObjectName("actionConsole")



        self.actionAnalyse = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolanalyse.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAnalyse.setIcon(icon15)
        self.actionAnalyse.setObjectName("actionAnalyse")

        self.actionSimulate = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolsimulate.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSimulate.setIcon(icon16)
        self.actionSimulate.setObjectName("actionSimulate")

        self.actionVisualize = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(resource_path("./ico/Tools/toolVisualize.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionVisualize.setIcon(icon16)
        self.actionVisualize.setObjectName("actionVisualize")

        self.actionUnits = QtWidgets.QAction(MainWindow)
        self.actionUnits.setObjectName("actionUnits")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionPrint)
        # self.menuFile.addAction(self.actionShare)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose)
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        # self.menuEdit.addAction(self.actionCut)
        # self.menuEdit.addAction(self.actionCopy)
        # self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addSeparator()
        # self.menuEdit.addAction(self.actionObjects)
        # self.menuElevation.addAction(self.actionFront)
        # self.menuElevation.addAction(self.actionLeft)
        # self.menuElevation.addAction(self.actionRight)
        # self.menuElevation.addAction(self.actionBack)
        # self.menuCamera.addAction(self.actionPlan)
        # self.menuCamera.ad1dAction(self.menuElevation.menuAction())
        self.menuView.addAction(self.actionToolbar)
        self.menuView.addAction(self.actionPropertiesBar)

        self.menuView.addAction(self.actionObject_Tree)
        self.menuView.addSeparator()
        # self.menuView.addAction(self.actionOthrograpic)
        # self.menuView.addAction(self.menuCamera.menuAction())
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionGrid)
        self.menuView.addAction(self.actionAxis)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionDark_Mode)
        self.menuView.addAction(self.actionClear_Screen)
        self.menuPreference.addAction(self.actionUnits)
        self.menuPreference.addAction(self.actionColor_profile)
        self.menuPreference.addAction(self.actionTweaks)

        # self.menuRun_Script.addAction(self.actionScript)
        self.menuRun_Script.addAction(self.actionMOI_calculator)
        self.menuRun_Script.addAction(self.actionCalculator)
        self.menuRun_Script.addAction(self.actionGenerateReport)
        # self.menuRun_Script.addAction(self.actionConsole)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionManual)
        self.menuHelp.addAction(self.actionUpdate)
        self.menuHelp.addAction(self.actionLicense)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuPreference.menuAction())
        self.menubar.addAction(self.menuRun_Script.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionLine)
        self.toolBar.addAction(self.actionArc)
        self.toolBar.addAction(self.actionQuad)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionRoller)
        self.toolBar.addAction(self.actionHinge)
        self.toolBar.addAction(self.actionFixed)
        self.toolBar.addAction(self.actionInternalHinge)
        self.toolBar.addAction(self.actionCustomSupport)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionMoment)
        self.toolBar.addAction(self.actionPointLoad)
        self.toolBar.addAction(self.actionUDL)
        self.toolBar.addAction(self.actionUVL)
        self.toolBar.addAction(self.actionPolyLoad)
        self.toolBar.addAction(self.actionTemprLoad)
        self.toolBar.addAction(self.actionMisfitLoad)
        self.toolBar.addAction(self.actionGravityLoad)
        self.toolBar.addSeparator()

        self.toolBar.addAction(self.actionMeasure)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionzoomIn)
        self.toolBar.addAction(self.actionzoomOut)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAnalyse)
        self.toolBar.addAction(self.actionSimulate)
        # self.toolBar.addAction(self.actionVisualize)
        self.retranslateUi(MainWindow)
        self.actionToolbar.toggled['bool'].connect(self.toolBar.setVisible)
        self.toolBar.visibilityChanged['bool'].connect(self.actionToolbar.setChecked)
        
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # MainWindow.showMaximized()
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Samrachana"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuCamera.setTitle(_translate("MainWindow", "Camera"))
        self.menuElevation.setTitle(_translate("MainWindow", "Elevation"))
        self.menuPreference.setTitle(_translate("MainWindow", "Preference"))
        self.menuRun_Script.setTitle(_translate("MainWindow", "Tools"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setToolTip(_translate("MainWindow", "Create new file"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setToolTip(_translate("MainWindow", "Open existing file"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setToolTip(_translate("MainWindow", "Save current file"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As"))
        self.actionSave_As.setToolTip(_translate("MainWindow", "Save current file as"))
        self.actionSave_As.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionPrint.setText(_translate("MainWindow", "Print"))
        self.actionPrint.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionShare.setText(_translate("MainWindow", "Share"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        # self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        # self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        # self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionObjects.setText(_translate("MainWindow", "Objects"))
        self.actionToolbar.setText(_translate("MainWindow", "Toolbar"))
        self.actionPropertiesBar.setText(_translate("MainWindow", "PropertiesBar"))

        self.actionObject_Tree.setText(_translate("MainWindow", "Object Tree"))
        self.actionOthrograpic.setText(_translate("MainWindow", "Othrograpic"))
        self.actionGrid.setText(_translate("MainWindow", "Grid"))
        self.actionGrid.setShortcut(_translate("MainWindow", "Ctrl+G"))
        self.actionAxis.setText(_translate("MainWindow", "Axis"))
        self.actionDark_Mode.setText(_translate("MainWindow", "Dark Mode"))
        self.actionPlan.setText(_translate("MainWindow", "Plan"))
        self.actionFront.setText(_translate("MainWindow", "Front"))
        self.actionLeft.setText(_translate("MainWindow", "Left"))
        self.actionRight.setText(_translate("MainWindow", "Right"))
        self.actionBack.setText(_translate("MainWindow", "Back"))
        self.actionColor_profile.setText(_translate("MainWindow", "Drawing profile"))
        self.actionTweaks.setText(_translate("MainWindow", "Tweaks"))

        self.actionSI_Units.setText(_translate("MainWindow", "SI Units"))
        self.actionEngineering_Units.setText(_translate("MainWindow", "Engineering Units"))
        self.actionClear_Screen.setText(_translate("MainWindow", "Clear Screen"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionManual.setText(_translate("MainWindow", "Manual"))
        self.actionUpdate.setText(_translate("MainWindow", "Update"))
        self.actionLicense.setText(_translate("MainWindow", "License"))
        self.actionLine.setText(_translate("MainWindow", "Line"))
        self.actionLine.setToolTip(_translate("MainWindow", "Draw line segemt selecting 2 points"))
        self.actionLine.setShortcut(_translate("MainWindow", "L"))
        self.actionArc.setText(_translate("MainWindow", "Arc"))
        self.actionArc.setToolTip(_translate("MainWindow", "Draw circular segment by selecting 3 points"))
        self.actionArc.setShortcut(_translate("MainWindow", "A"))
        self.actionQuad.setText(_translate("MainWindow", "Quad"))
        self.actionQuad.setToolTip(_translate("MainWindow", "Draw quadratic arc selecting 3 points"))
        self.actionQuad.setShortcut(_translate("MainWindow", "Q"))
        self.actionRoller.setText(_translate("MainWindow", "Roller"))
        self.actionRoller.setToolTip(_translate("MainWindow", "Add Roller support"))
        self.actionRoller.setShortcut(_translate("MainWindow", "R"))
        self.actionHinge.setText(_translate("MainWindow", "Hinge"))
        self.actionHinge.setToolTip(_translate("MainWindow", "Add hinge support"))
        self.actionHinge.setShortcut(_translate("MainWindow", "H"))
        self.actionFixed.setText(_translate("MainWindow", "Fixed"))
        self.actionFixed.setToolTip(_translate("MainWindow", "Add fixed support"))
        self.actionFixed.setShortcut(_translate("MainWindow", "F"))

        self.actionCustomSupport.setText(_translate("MainWindow", "CustomSupport"))
        self.actionCustomSupport.setToolTip(_translate("MainWindow", "Add Custom Support "))
        self.actionCustomSupport.setShortcut(_translate("MainWindow", "S"))

        self.actionInternalHinge.setText(_translate("MainWindow", "InternalHinge"))
        self.actionInternalHinge.setToolTip(_translate("MainWindow", "Add internal hinge support"))
        self.actionInternalHinge.setShortcut(_translate("MainWindow", "I"))
        self.actionPointLoad.setText(_translate("MainWindow", "PointLoad"))
        self.actionPointLoad.setToolTip(_translate("MainWindow", "Add point load to a segment"))
        self.actionPointLoad.setShortcut(_translate("MainWindow", "P"))
        self.actionUDL.setText(_translate("MainWindow", "UDL"))
        self.actionUDL.setToolTip(_translate("MainWindow", "Add uniformly distrubuted load (degree 0)"))
        self.actionUDL.setShortcut(_translate("MainWindow", "U"))
        self.actionUVL.setText(_translate("MainWindow", "UVL"))
        self.actionUVL.setToolTip(_translate("MainWindow", "Add uniformly varied load (degree 1)"))
        self.actionUVL.setShortcut(_translate("MainWindow", "V"))

        self.actionPolyLoad.setText(_translate("MainWindow", "Polyload"))
        self.actionPolyLoad.setToolTip(_translate("MainWindow", "Add load of higher degree"))
        self.actionPolyLoad.setShortcut(_translate("MainWindow", "D"))

        self.actionTemprLoad.setText(_translate("MainWindow", "TemprLoad"))
        self.actionTemprLoad.setToolTip(_translate("MainWindow", "Add temperature loads"))
        self.actionTemprLoad.setShortcut(_translate("MainWindow", "T"))

        self.actionGravityLoad.setText(_translate("MainWindow", "GravityLoad"))
        self.actionGravityLoad.setToolTip(_translate("MainWindow", "Add gravity loads"))
        self.actionGravityLoad.setShortcut(_translate("MainWindow", "G"))

        self.actionMisfitLoad.setText(_translate("MainWindow", "MisfitLoad"))
        self.actionMisfitLoad.setToolTip(_translate("MainWindow", "Add misfit loads"))
        self.actionMisfitLoad.setShortcut(_translate("MainWindow", "N"))

        self.actionzoomIn.setText(_translate("MainWindow", "zoomIn"))
        self.actionzoomIn.setToolTip(_translate("MainWindow", "zoom in"))
        self.actionzoomIn.setShortcut(_translate("MainWindow", "Ctrl+="))
        self.actionzoomOut.setText(_translate("MainWindow", "zoomOut"))
        self.actionzoomOut.setToolTip(_translate("MainWindow", "zoom out"))
        self.actionzoomOut.setShortcut(_translate("MainWindow", "Ctrl+-"))
        # self.actionLine_2.setText(_translate("MainWindow", "Line"))
        # self.actionArc_2.setText(_translate("MainWindow", "Arc"))
        # self.actionQuad_2.setText(_translate("MainWindow", "Quad"))
        # self.actionPoint_load.setText(_translate("MainWindow", "Point load"))
        # self.actionUDL_2.setText(_translate("MainWindow", "UDL"))
        # self.actionUVL_2.setText(_translate("MainWindow", "UVL"))
        # self.actionRoller_2.setText(_translate("MainWindow", "Roller"))
        # self.actionHinge_2.setText(_translate("MainWindow", "Hinge"))
        # self.actionFixed_2.setText(_translate("MainWindow", "Fixed"))
        # self.actionInternal_Hinge.setText(_translate("MainWindow", "Internal Hinge"))
        self.actionMoment.setText(_translate("MainWindow", "moment"))
        self.actionMoment.setToolTip(_translate("MainWindow", "Add external moment to the structure"))
        self.actionMoment.setShortcut(_translate("MainWindow", "M"))
        self.actionScript.setText(_translate("MainWindow", "Script"))
        self.actionMOI_calculator.setText(_translate("MainWindow", "Section Designer"))
        self.actionCalculator.setText(_translate("MainWindow", "Calculator"))
        self.actionGenerateReport.setText(_translate("MainWindow", "Generate Report"))
        self.actionGenerateReport.setShortcut(_translate("MainWindow",'Alt+R'))
        self.actionConsole.setText(_translate("MainWindow", "Console"))

        self.actionMeasure.setText(_translate("MainWindow", "Measure"))
        self.actionMeasure.setToolTip(_translate("MainWindow", "Measure the structural members"))
        self.actionMeasure.setShortcut(_translate("MainWindow", "z"))

        self.actionAnalyse.setText(_translate("MainWindow", "Analyse"))
        self.actionAnalyse.setToolTip(_translate("MainWindow", "Analyse the structure"))
        self.actionAnalyse.setShortcut(_translate("MainWindow", "Alt+A"))

        self.actionSimulate.setText(_translate("MainWindow", "Simulate"))
        self.actionSimulate.setToolTip(_translate("MainWindow", "Simulate deflections"))
        self.actionSimulate.setShortcut(_translate("MainWindow", "Alt+S"))
        
        self.actionVisualize.setText(_translate("MainWindow", "Visualize"))
        self.actionVisualize.setToolTip(_translate("MainWindow", "Show all diagrams of full structure"))
        self.actionVisualize.setShortcut(_translate("MainWindow", "Alt+V"))

        self.actionUnits.setText(_translate("MainWindow", "Units"))
